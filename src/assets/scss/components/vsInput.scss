.vuesax-app-is-rtl .placeholderx-enter,
.vuesax-app-is-rtl .placeholderx-leave-to {
  -webkit-transform: translate(-15px) !important;
  transform: translate(-15px) !important;
}
.vuesax-app-is-ltr .placeholderx-enter,
.vuesax-app-is-ltr .placeholderx-leave-to {
  -webkit-transform: translate(15px) !important;
  transform: translate(15px) !important;
}
.placeholderx-enter, .placeholderx-leave-to  {
  opacity: 0;
}.icon-validate-enter, .icon-validate-leave-to  {
  opacity: 0;
  transform: scale(0.5) !important;
}.vs-con-input-label {
  position: relative;
  transition: all 0.3s ease;
  width: 200px;&.is-label-placeholder {
    margin-top: 17px;
  }.vs-con-input {
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    position: relative;
    justify-content: center;
  }
}.vs-input--icon {
  position: absolute;
  left: 5px;
  z-index: 100;
  font-size: 1.1rem;
  border-right: 1px solid rgba(0, 0, 0, 0.1);
  padding-right: 3px;
  color: rgba(0, 0, 0, 0.4);
  cursor: default;
  user-select: none;
  top: 8px;&.small {
    top: 4px;
    font-size: 1rem;
  }&.large {
    top: 14px;
  }&.icon-after {
    @include propWithDir(left, null, auto);
    @include propWithDir(right, null, 5px);
    @include propWithDir(border, left, 1px solid rgba(0, 0, 0, 0.1));
    @include propWithDir(border, right, 0px);
    @include propWithDir(padding, left, 3px);
    @include propWithDir(padding, right, 0px);
  }&.icon-no-border {
    border: 0;
  }
}.vs-input--placeholder {
  transition: all 0.2s ease;
  position: absolute;
  border-radius: 5px;
  @include propWithDir(left, null, 0px);
  padding: 0.4 rem;
  @include propWithDir(0.4 rem, left, 0.55rem);
  width: 100%;
  box-sizing: border-box;
  overflow: hidden;
  font-size: 0.85rem;
  color: rgba(0, 0, 0, 0.4);
  white-space: nowrap;
  cursor: text;
  user-select: none;
  top: -1px;
  pointer-events: none;&.small {
    padding: 0.2rem;
    @include propWithDir(0.2rem, left, 0.55rem);
  }&.large {
    padding-top: 0.8rem;
    padding: 0.7rem;
  }
}.vs-input--label {
  @include propWithDir(0.7rem, left, 5px);
  font-size: 0.85rem;
  color: rgba(0, 0, 0, 0.7);
}.vs-input--text-validation {
  position: relative;
  font-size: 0.65rem;
  overflow: hidden;
  transition: all 0.2s ease;.vs-input--text-validation-span {
    padding: 2px 4px;
    padding-bottom: 4px;
    display: block;
  }
}.vs-input--icon-validate {
  position: absolute;
  top: 0px;
  @include propWithDir(right, null, 0px);
  font-size: 1.1rem;
  height: 100%;
  display: flex;
  align-items: center;
  padding: 0px 4px;
  border-radius: 0px 5px 5px 0px;
  transition: all 0.2s ease;&.icon-before {
    position: absolute;
    @include propWithDir(left, null, 0px);
    right: auto;
    z-index: 100;
    font-size: 1.1rem;
    @include propWithDir(0px 4px, auto, 0.2rem);
    cursor: default;
    user-select: none;
    top: 0px;
    @include propWithDir(0, auto, 1px);
  }
}.vs-input--input {
  color: inherit;
  position: relative;
  padding: 0.4 rem;
  border-radius: 5px;
  border: 1px solid rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.15);
  transition: all 0.3s ease;
  padding-left: 32px;
  width: 100%;&.small {
    padding: 0.2rem;
    @include propWithDir(0.2rem, left, 0.55rem);
    + .vs-placeholder-label-small {
      padding: 0rem 0.4rem;
    }
  }&.normal {
    padding: 0.4rem;
  }&.large {
    padding: 0.8rem;
    + .vs-placeholder-label-large {
      padding: 0.6rem;
    }
  }&:focus {
    box-shadow: 0px 3px 10px 0px rgba(0, 0, 0, 0.15);
  }&:focus, &.hasValue {
    + .vs-placeholder-label {
      @include propWithDir(scale(0.5) !important, null, -3px -90%, !important);
      font-size: 0.7rem;
      @include propWithDir(0.6rem, left, 0.5rem, !important);
    }
    + .vs-placeholder-label-small {
      @include propWithDir(scale(0.5) !important, null, -3px -120%, !important);
      font-size: 0.7rem;
      @include propWithDir(0.6rem, left, 0.5rem, !important);
    }
  }&:focus {
    + .vs-input--placeholder {
      @include propWithDir(scale(0.5) !important, null, 5px);
    }
  }&.hasIcon {
    @include propWithDir(0.6rem, left, 32px);
    + .vs-input--placeholder {
      @include propWithDir(0.6rem, left, 32px);
    }
  }&.icon-after-input {
    @include propWithDir(0.6rem, auto, 1.75rem);
    + .vs-input--placeholder {
      @include propWithDir(0.6rem, auto, 1.75rem);
    }
  }&.hasIcon.icon-after-input {
    @include propWithDir(0.6rem, left, 0.85em);
    + .vs-input--placeholder {
      @include propWithDir(0.6rem, left, 0.85em);
    }
  }&:disabled {
    opacity: $vs-disabled-opacity;
    cursor: default;
    pointer-events: none;
    + .vs-input--placeholder {
      opacity: $vs-disabled-opacity;
      cursor: default;
      pointer-events: none;
    }
  }
}

@each $colorx, $value in $vs-colors {
  .vs-input-#{$colorx} {
    .vs-input--input {
      &:focus {
        border: 1px solid getColor($colorx) !important;~ .vs-placeholder-label, ~ .icon-inputx {
          color: getColor($colorx);
        }
      }
    }&.isFocus {
      .vs-input--label {
        color: getColor($colorx);
      }
    }
  }&.span-text-validation-#{$colorx} {
    color: getColor($colorx) !important;
  }&.input-icon-validate-#{$colorx} {
    .vs-input--input {
      border: 1px solid getColor($colorx) !important;&:focus {
        border: 1px solid getColor($colorx) !important;
      }
    }.input-icon-validate {
      background: getColor($colorx, 0.2);
      color: getColor($colorx);
    }
  }
}
